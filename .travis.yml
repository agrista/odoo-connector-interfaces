sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.7.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR=${TRAVIS_BUILD_DIR}/odoo/local-src
    - SONGS_DIR=${TRAVIS_BUILD_DIR}/odoo/songs
    - COMPOSE_PROJECT_NAME=fluxdock
    - RANCHER_STACK_NAME=fluxdock-odoo-test
    - secure: "V99p+UxWJDt0zfpD6GSnMiASjVNsW/JqqUJFAA/JHJHIbi7LJtZt+f6d1bWaJLfSrPAQCYwT0kW5M9hOGA31QNEyvyKYg2pS3sA4+4WEosguo0mrpD2G5x3at1LJKve+Mx3bujUCh3Lt3KTuBitmE5pk4bfgafM4S6qZZMBPWuLAHJFGtFgSe/DFP3CsG7q98iy/al7uEATOaiENyjIUCzD7h1Mq69Ea/74TiqCdpwa1+f/Z5H5RHcTfwuJHpl5UFAbj5fKI7y7ruEYUtf/F6xJw81qDb9RoWDD980H+yL5ke58APdqpWw/qbnnUUmoUf4G/Ed9U0MwycKwRJJIdENh95o9EWG5btDRvgkqmJCZN58Iao13X/7ZAP5piDMdmySI8MDqsHNadAeocdRGUPxr/XcrKzssCyR5FyyeWNr8I4pLgIEKLf7WoC0GjCRNzqZVAdY0u0AujaHFpXhPKl7Bslh9co5F1pivjvSbcnjNFE8FaxH6Q3vNgF+pqHx3gicVf8HOzHl9Ok1hyXedXEErdPHhrfa0viCicl8yoehbMbQ50mXZ+KTRI6IT5lis9YWgMyFWLHN/YuvFWXYiIyyaLr1FSZELXNCOYHOilgPjaOYSB9ttV0wxx4HauaK4lxbusMEaz+G7m4zAFeq303JyL/oULowySq1UugWuciWk="

before_install:
  - sudo apt-get update
  - sudo DEBIAN_FRONTEND=noninteractive apt-get install -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" docker-engine --yes --force-yes
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython ; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then python ./travis/git_submodule_update.py ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f docker-compose.yml build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml ps ; fi

# We run the tests and scenario in the same build, so we can push the docker image
# after that we validated it has tests and scenario passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  # run tests on an empty database, which is dropped afterwards
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 odoo runtests ; fi
  # run the scenario
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 -e MARABUNTA_MODE=demo -e MARABUNTA_ALLOW_SERIE=True odoo odoo --stop-after-init ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
