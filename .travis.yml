sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.17.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR="${TRAVIS_BUILD_DIR}/odoo/local-src"
    - SONGS_DIR="${TRAVIS_BUILD_DIR}/odoo/songs"
    - COMPOSE_PROJECT_NAME=fluxdock
    - GENERATED_IMAGE="${COMPOSE_PROJECT_NAME}_odoo"
    - DOCKER_HUB_REPO="camptocamp/${GENERATED_IMAGE}"
    - RANCHER_MINION_SERVER="https://${COMPOSE_PROJECT_NAME}.odoo-test.camptocamp.ch"
    # Put here the travis secure key generated by `travis encrypt` command for the rancher minion server
    - secure: "QcwtkJvnJUwXF44FaYmR2A9BVSgNGwr7Dhp2m6Gn+vmPCrq4iAtWpQDBNSf60MjBbkGvkDe46IJnC/95sww88hYjGBBXEBrHDxG0PYwez++aCsAZkFMKaoL05GzIMr2nnnuM+1v+A6KJNQPjSkA0ZjrnB0URCEspUWOgrBF7tUr02TEd7IQrCGOE03TCRrV/PENjj7Nmyk/cSI7v5LisjpE7ZRziSU/xwZaM3udXR9YXZyR3UWUXZ5BWuOoVRfGi/VFIVGaYWbIeBxFlhCj4ZO+swJgOgMwua6PYS+t7kUcTJCpWNod5KJzElkq9ORnH17RkCnex8Rw6p1F/20ImmP8+MwFvxqhmDu9WuXbU38wrhCo8C6p0/Rj5v2bjvkuvqHaL9DJZ3OCrkYb44lzJM15R9tn/2FTssEnhhM9Nob5r8nuC0WT3nzIP75Fw/IrWVa5jEHDxH1Y1XBqArEZ9jMH8yKhuJD7KzM97R+0PICyV5f62Yj5bIUFZt6c/E9Y+ZhXz+ZE/6TyL3bO2q3fhAO+8vO4B0LEP5LgP1UdAuLXkJkSqPR1O75P8gR3s04cUHtJnxRIZd/kiFGvJ28iLmnv4SZWSNg4dkEQ9UniKv4ADmUldzWeYpTdfZ1c+T3Vs3R6S3IS7mpsKRAp2AqV+6ECBsEjTIU9IuN8njHdg6IM="

before_install:
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython requests pyOpenSSL ndg-httpsclient pyasn1 pyyaml; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then ./travis/git_submodule_update.py ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f docker-compose.yml build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml ps ; fi

# We run the tests and scenario in the same build, so we can push the docker image
# after that we validated it has tests and scenario passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  # run tests on an empty database, which is dropped afterwards
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 odoo runtests ; fi
  # run the scenario
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 -e MARABUNTA_MODE=sample -e MARABUNTA_ALLOW_SERIE=True odoo odoo --stop-after-init ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
